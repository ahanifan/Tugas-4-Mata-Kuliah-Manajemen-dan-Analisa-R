#1.Mengakses dan mendownload dataset ke dalam global environment RStudio
library(tidyverse)
stroke_long = stroke %>% select(c(1:6,39:46)) %>%
  pivot_longer(cols=Bart1:Bart8,
               names_to = "time",
               names_prefix = "Bart",
               values_to = "ability")

names(stroke_long)
glimpse(stroke_long)

#2.A Membuat visualisasi grafik garis dari perkembangan nilai kemampuan motorik (functional ability score) dari setiap subyek menggunakan variable bart.
library(ggplot) 
ggplot(stroke_long, aes(x = time,
                        y = ability)) +
  geom_line(aes(group = Subject)) +
  theme_classic()+labs( y="Functional abiity score", 
                        x="Time", title="Example Recovery From Stroke")

#2.B Membuat visualisasi grafik garis dari perkembangan nilai kemampuan motorik (functional ability score) dari setiap group menggunakan variable bart.
library(ggplot2) 
library(ggplot2)
ggplot(stroke_long, aes(x = time,y = ability)) +geom_line(aes(group = Group)) +
  theme_classic()+ labs( y="Functional abiity score", 
                         x="Time", title="Example Recovery From Stroke")

ggplot(stroke_long, aes(x=time, y=ability, group=Subject)) +geom_line() + 
  facet_wrap(~Group)+ labs( y="Functional abiity score", 
                            x="Time", title="Example Recovery From Stroke")


#3. Membuat grafik nilai rata-rata perkembangan fungsi motorik secara total dan masing-masing yang divisualisasikan pada 1 grafik.
Average_recovery_score <- stroke_long %>%
  group_by(Group, time) %>%
  mutate(Average = mean(ability)) %>%
  as.data.frame()

Average_recovery_score %>%
  mutate(label = if_else(time == max(time), as.character(Group), NA_character_)) %>%
  ggplot(aes(x = time, y = Average, group = Group, colour = Group)) + geom_line() + labs( y="Functional abiity score", x="Week", title="Average strokes scores for groups for patients")

#4. Membuat Matrix Scatter plot dari nilai fungsi motorik antar waktu/pekan.
pairs(~Week1 + Week2 +  Week3 + Week4 + Week5 + Week6 + Week7 + Week8, data = stroke_week)

#5. Menghitung dan membuat tabel silang koefisien korelasi nilai fungsi motorik antar waktu/pekan. 
cor(stroke$Bart1, stroke$Bart2)
cor(stroke$Bart1, stroke$Bart3)
cor(stroke$Bart1, stroke$Bart4)
cor(stroke$Bart1, stroke$Bart5)
cor(stroke$Bart1, stroke$Bart6)
cor(stroke$Bart1, stroke$Bart7)
cor(stroke$Bart1, stroke$Bart8)
cor(stroke$Bart2, stroke$Bart3)
cor(stroke$Bart2, stroke$Bart4)
cor(stroke$Bart2, stroke$Bart5)
cor(stroke$Bart2, stroke$Bart6)
cor(stroke$Bart2, stroke$Bart7)
cor(stroke$Bart2, stroke$Bart8)
cor(stroke$Bart3, stroke$Bart4)
cor(stroke$Bart3, stroke$Bart5)
cor(stroke$Bart3, stroke$Bart6)
cor(stroke$Bart3, stroke$Bart7)
cor(stroke$Bart3, stroke$Bart8)
cor(stroke$Bart4, stroke$Bart5)
cor(stroke$Bart4, stroke$Bart6)
cor(stroke$Bart4, stroke$Bart7)
cor(stroke$Bart4, stroke$Bart8)
cor(stroke$Bart5, stroke$Bart6)
cor(stroke$Bart5, stroke$Bart7)
cor(stroke$Bart5, stroke$Bart8)
cor(stroke$Bart6, stroke$Bart7)
cor(stroke$Bart6, stroke$Bart8)
cor(stroke$Bart7, stroke$Bart8)

#6.Menghitung intercept dan slope, beserta standar errornya masing-masing,  dari hubungan fungsi motorik dengan waktu/pekan setiap subyek
ml <- lmList(log(ability) ~ I(time) | Subject, stroke_long)
intercepts <- sapply(ml,coef)[1,]
slopes <- sapply(ml,coef)[2,]
intercepts
slopes

library(lme4)
model <- (lmList(ability ~ time | Subject, data = stroke_gabungan))
summary(model)$coef
